import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import {useState} from "react";

import {
    createConnectTransport,
    createPromiseClient,
} from "@bufbuild/connect-web";
import {MapEventService} from "../map_api/v1/map_api_connectweb";

const inter = Inter({ subsets: ['latin'] })

// The transport defines what type of endpoint we're hitting.
// In our example we'll be communicating with a Connect endpoint.
const transport = createConnectTransport({
    baseUrl: "http://localhost:8080",
});

// Here we make the client itself, combining the service
// definition with the transport.
const client = createPromiseClient(MapEventService, transport);

export default function Home() {
    const [inputValue, setInputValue] = useState("");
    const [messages, setMessages] = useState<
        {
            fromMe: boolean;
            message: string;
        }[]
    >([]);

    return (
    <>
        <ol>
            {messages.map((msg, index) => (
                <li key={index}>
                    {`${msg.fromMe ? "ME:" : "ELIZA:"} ${msg.message}`}
                </li>
            ))}
        </ol>
      <form
          onSubmit={async (e) => {
              e.preventDefault();
              // Clear inputValue since the user has submitted.
              setInputValue("");
              // Store the inputValue in the chain of messages and
              // mark this message as coming from "me"
              setMessages((prev) => [
                  ...prev,
                  {
                      fromMe: true,
                      message: inputValue,
                  },
              ]);
              const response = await client.createMapEvent({
                  name: inputValue,
                  longitude: 0,
                  latitude: 0,
                  startTime: BigInt(0),
                  endTime: BigInt(0),
              });
              setMessages((prev) => [
                  ...prev,
                  {
                      fromMe: false,
                      message: response.id,
                  },
              ]);
          }}
      >
          <input value={inputValue} onChange={e => setInputValue(e.target.value)} />
        <button type="submit">Send</button>
      </form>
      {/*<Head>*/}
      {/*  <title>Create Next App</title>*/}
      {/*  <meta name="description" content="Generated by create next app" />*/}
      {/*  <meta name="viewport" content="width=device-width, initial-scale=1" />*/}
      {/*  <link rel="icon" href="/favicon.ico" />*/}
      {/*</Head>*/}
      {/*<main className={styles.main}>*/}
      {/*  <div className={styles.description}>*/}
      {/*    <p>*/}
      {/*      Get started by editing&nbsp;*/}
      {/*      <code className={styles.code}>pages/index.tsx</code>*/}
      {/*    </p>*/}
      {/*    <div>*/}
      {/*      <a*/}
      {/*        href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"*/}
      {/*        target="_blank"*/}
      {/*        rel="noopener noreferrer"*/}
      {/*      >*/}
      {/*        By{' '}*/}
      {/*        <Image*/}
      {/*          src="/vercel.svg"*/}
      {/*          alt="Vercel Logo"*/}
      {/*          className={styles.vercelLogo}*/}
      {/*          width={100}*/}
      {/*          height={24}*/}
      {/*          priority*/}
      {/*        />*/}
      {/*      </a>*/}
      {/*    </div>*/}
      {/*  </div>*/}

      {/*  <div className={styles.center}>*/}
      {/*    <Image*/}
      {/*      className={styles.logo}*/}
      {/*      src="/next.svg"*/}
      {/*      alt="Next.js Logo"*/}
      {/*      width={180}*/}
      {/*      height={37}*/}
      {/*      priority*/}
      {/*    />*/}
      {/*    <div className={styles.thirteen}>*/}
      {/*      <Image*/}
      {/*        src="/thirteen.svg"*/}
      {/*        alt="13"*/}
      {/*        width={40}*/}
      {/*        height={31}*/}
      {/*        priority*/}
      {/*      />*/}
      {/*    </div>*/}
      {/*  </div>*/}

      {/*  <div className={styles.grid}>*/}
      {/*    <a*/}
      {/*      href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"*/}
      {/*      className={styles.card}*/}
      {/*      target="_blank"*/}
      {/*      rel="noopener noreferrer"*/}
      {/*    >*/}
      {/*      <h2 className={inter.className}>*/}
      {/*        Docs <span>-&gt;</span>*/}
      {/*      </h2>*/}
      {/*      <p className={inter.className}>*/}
      {/*        Find in-depth information about Next.js features and&nbsp;API.*/}
      {/*      </p>*/}
      {/*    </a>*/}

      {/*    <a*/}
      {/*      href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"*/}
      {/*      className={styles.card}*/}
      {/*      target="_blank"*/}
      {/*      rel="noopener noreferrer"*/}
      {/*    >*/}
      {/*      <h2 className={inter.className}>*/}
      {/*        Learn <span>-&gt;</span>*/}
      {/*      </h2>*/}
      {/*      <p className={inter.className}>*/}
      {/*        Learn about Next.js in an interactive course with&nbsp;quizzes!*/}
      {/*      </p>*/}
      {/*    </a>*/}

      {/*    <a*/}
      {/*      href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"*/}
      {/*      className={styles.card}*/}
      {/*      target="_blank"*/}
      {/*      rel="noopener noreferrer"*/}
      {/*    >*/}
      {/*      <h2 className={inter.className}>*/}
      {/*        Templates <span>-&gt;</span>*/}
      {/*      </h2>*/}
      {/*      <p className={inter.className}>*/}
      {/*        Discover and deploy boilerplate example Next.js&nbsp;projects.*/}
      {/*      </p>*/}
      {/*    </a>*/}

      {/*    <a*/}
      {/*      href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"*/}
      {/*      className={styles.card}*/}
      {/*      target="_blank"*/}
      {/*      rel="noopener noreferrer"*/}
      {/*    >*/}
      {/*      <h2 className={inter.className}>*/}
      {/*        Deploy <span>-&gt;</span>*/}
      {/*      </h2>*/}
      {/*      <p className={inter.className}>*/}
      {/*        Instantly deploy your Next.js site to a shareable URL*/}
      {/*        with&nbsp;Vercel.*/}
      {/*      </p>*/}
      {/*    </a>*/}
      {/*  </div>*/}
      {/*</main>*/}
    </>
  )
}
