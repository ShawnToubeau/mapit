// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file proto/map_api.proto (package map_api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message map_api.v1.NewMapEvent
 */
export class NewMapEvent extends Message<NewMapEvent> {
  /**
   * @generated from field: string description = 1;
   */
  description = "";

  constructor(data?: PartialMessage<NewMapEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "map_api.v1.NewMapEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewMapEvent {
    return new NewMapEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewMapEvent {
    return new NewMapEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewMapEvent {
    return new NewMapEvent().fromJsonString(jsonString, options);
  }

  static equals(a: NewMapEvent | PlainMessage<NewMapEvent> | undefined, b: NewMapEvent | PlainMessage<NewMapEvent> | undefined): boolean {
    return proto3.util.equals(NewMapEvent, a, b);
  }
}

