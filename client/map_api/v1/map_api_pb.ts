// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file map_api/v1/map_api.proto (package map_api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message map_api.v1.CreateMapEventRequest
 */
export class CreateMapEventRequest extends Message<CreateMapEventRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: int64 start_time = 2;
   */
  startTime = protoInt64.zero;

  /**
   * @generated from field: int64 end_time = 3;
   */
  endTime = protoInt64.zero;

  /**
   * @generated from field: double latitude = 4;
   */
  latitude = 0;

  /**
   * @generated from field: double longitude = 5;
   */
  longitude = 0;

  /**
   * @generated from field: string description = 6;
   */
  description = "";

  constructor(data?: PartialMessage<CreateMapEventRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "map_api.v1.CreateMapEventRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "end_time", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 6, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateMapEventRequest {
    return new CreateMapEventRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateMapEventRequest {
    return new CreateMapEventRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateMapEventRequest {
    return new CreateMapEventRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateMapEventRequest | PlainMessage<CreateMapEventRequest> | undefined, b: CreateMapEventRequest | PlainMessage<CreateMapEventRequest> | undefined): boolean {
    return proto3.util.equals(CreateMapEventRequest, a, b);
  }
}

/**
 * @generated from message map_api.v1.CreateMapEventResponse
 */
export class CreateMapEventResponse extends Message<CreateMapEventResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<CreateMapEventResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "map_api.v1.CreateMapEventResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateMapEventResponse {
    return new CreateMapEventResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateMapEventResponse {
    return new CreateMapEventResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateMapEventResponse {
    return new CreateMapEventResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateMapEventResponse | PlainMessage<CreateMapEventResponse> | undefined, b: CreateMapEventResponse | PlainMessage<CreateMapEventResponse> | undefined): boolean {
    return proto3.util.equals(CreateMapEventResponse, a, b);
  }
}

