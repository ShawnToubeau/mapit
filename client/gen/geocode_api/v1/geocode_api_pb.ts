// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file geocode_api/v1/geocode_api.proto (package geocode_api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message geocode_api.v1.GeocodeSearchRequest
 */
export class GeocodeSearchRequest extends Message<GeocodeSearchRequest> {
  /**
   * @generated from field: string query = 1;
   */
  query = "";

  constructor(data?: PartialMessage<GeocodeSearchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "geocode_api.v1.GeocodeSearchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeocodeSearchRequest {
    return new GeocodeSearchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeocodeSearchRequest {
    return new GeocodeSearchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeocodeSearchRequest {
    return new GeocodeSearchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GeocodeSearchRequest | PlainMessage<GeocodeSearchRequest> | undefined, b: GeocodeSearchRequest | PlainMessage<GeocodeSearchRequest> | undefined): boolean {
    return proto3.util.equals(GeocodeSearchRequest, a, b);
  }
}

/**
 * @generated from message geocode_api.v1.GeocodeSearchResponse
 */
export class GeocodeSearchResponse extends Message<GeocodeSearchResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GeocodeSearchResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "geocode_api.v1.GeocodeSearchResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeocodeSearchResponse {
    return new GeocodeSearchResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeocodeSearchResponse {
    return new GeocodeSearchResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeocodeSearchResponse {
    return new GeocodeSearchResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GeocodeSearchResponse | PlainMessage<GeocodeSearchResponse> | undefined, b: GeocodeSearchResponse | PlainMessage<GeocodeSearchResponse> | undefined): boolean {
    return proto3.util.equals(GeocodeSearchResponse, a, b);
  }
}

