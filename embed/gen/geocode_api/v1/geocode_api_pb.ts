// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file geocode_api/v1/geocode_api.proto (package proto.geocode_api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message proto.geocode_api.v1.SearchAddressRequest
 */
export class SearchAddressRequest extends Message<SearchAddressRequest> {
  /**
   * @generated from field: string query = 1;
   */
  query = "";

  constructor(data?: PartialMessage<SearchAddressRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.geocode_api.v1.SearchAddressRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchAddressRequest {
    return new SearchAddressRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchAddressRequest {
    return new SearchAddressRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchAddressRequest {
    return new SearchAddressRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SearchAddressRequest | PlainMessage<SearchAddressRequest> | undefined, b: SearchAddressRequest | PlainMessage<SearchAddressRequest> | undefined): boolean {
    return proto3.util.equals(SearchAddressRequest, a, b);
  }
}

/**
 * @generated from message proto.geocode_api.v1.SearchAddressResponse
 */
export class SearchAddressResponse extends Message<SearchAddressResponse> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: double latitude = 2;
   */
  latitude = 0;

  /**
   * @generated from field: double longitude = 3;
   */
  longitude = 0;

  constructor(data?: PartialMessage<SearchAddressResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "proto.geocode_api.v1.SearchAddressResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchAddressResponse {
    return new SearchAddressResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchAddressResponse {
    return new SearchAddressResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchAddressResponse {
    return new SearchAddressResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SearchAddressResponse | PlainMessage<SearchAddressResponse> | undefined, b: SearchAddressResponse | PlainMessage<SearchAddressResponse> | undefined): boolean {
    return proto3.util.equals(SearchAddressResponse, a, b);
  }
}

