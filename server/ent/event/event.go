// Code generated by ent, DO NOT EDIT.

package event

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the event type in the database.
	Label = "event"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldStartTime holds the string denoting the start_time field in the database.
	FieldStartTime = "start_time"
	// FieldEndTime holds the string denoting the end_time field in the database.
	FieldEndTime = "end_time"
	// FieldPoint holds the string denoting the point field in the database.
	FieldPoint = "point"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// EdgeParentMap holds the string denoting the parent_map edge name in mutations.
	EdgeParentMap = "parent_map"
	// Table holds the table name of the event in the database.
	Table = "events"
	// ParentMapTable is the table that holds the parent_map relation/edge.
	ParentMapTable = "events"
	// ParentMapInverseTable is the table name for the EventMap entity.
	// It exists in this package in order to avoid circular dependency with the "eventmap" package.
	ParentMapInverseTable = "event_maps"
	// ParentMapColumn is the table column denoting the parent_map relation/edge.
	ParentMapColumn = "event_map_events"
)

// Columns holds all SQL columns for event fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldStartTime,
	FieldEndTime,
	FieldPoint,
	FieldDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "events"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"event_map_events",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
